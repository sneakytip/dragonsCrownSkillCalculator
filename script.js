class SkillType{constructor(b,a,c){this.name=b;this.label=a;this.categoryGroup=c}}class SkillCategory{constructor(b,a,c){this.name=b;this.label=a;this.skillGroup=c}}class Skill{constructor(b,a,c,g,d){this.name=b;this.label=a;this.description=c;this.tierGroup=g;this.moreInfo=d;this.levelMax=g.length}}class SkillTier{constructor(b,a,c,g,d,h){this.level=b;this.effect=a;this.cost=c;this.minLevelPlayer=g;this.minLevelCategory=d;this.moreInfo=h}}
const skillsCommon=new SkillType("common","Common Skills",[new SkillCategory("common","Common",[new Skill("slide","Slide Attack","Increased chance of taking enemy down when sliding.",[new SkillTier(1,"Power: 30 Knockdown +30%",1,-1,-1,["Slight increase to max movement distance."]),new SkillTier(2,"Power: 34 Knockdown +40%",1,10,-1,["Slight increase to max movement distance."]),new SkillTier(3,"Power: 40 Knockdown +55%",2,20,3,["Moderate increase to max movement distance."]),new SkillTier(4,"Power: 46 Knockdown +70%",
3,31,3,["Great increase to max movement distance."]),new SkillTier(5,"Power: 60 Knockdown +100%",4,40,6,["Massive increase to max movement distance."])],["The max distance of the slide attack increases as the level of the skill increases.","The max time of execution does not change with changes to the skill level, thus you will cover further max distances in the same amount of time you would cover the default max distance."])])]),skillsFighter=new SkillType("fighter","Fighter Skills",[new SkillCategory("attack",
"Attack",[new Skill("cycloneMasher","Cyclone Masher","Increases duration of aerial attacks. Rapidly press "+String.fromCharCode(9632)+" to activate.",[new SkillTier(1,"Power: 20 Descent speed -30%",1,-1,-1,[]),new SkillTier(2,"Power: 22 Descent speed -45 Attack range: 105%",1,10,-1,[]),new SkillTier(3,"Power: 23 Descent speed -60 Attack range: 110%",2,19,3,[]),new SkillTier(4,"Power: 25 Descent speed -75 Attack range: 115%",3,30,3,[]),new SkillTier(5,"Power: 30 Descent speed -95 Attack range: 125%",
5,45,6,[])],[]),new Skill("shockwave","Shockwave","Send out ripples that creep along the ground. Activate with "+String.fromCharCode(8613)+" "+String.fromCharCode(43)+" "+String.fromCharCode(9632)+".",[new SkillTier(1,"Power: 15 Number of shockwaves: 2",1,-1,-1,[]),new SkillTier(2,"Power: 18 Number of shockwaves: 2",1,8,-1,[]),new SkillTier(3,"Power: 23 Number of shockwaves: 3",2,16,3,[]),new SkillTier(4,"Power: 30 Number of shockwaves: 3",3,26,3,[]),new SkillTier(5,"Power: 45 Number of shockwaves: 4",
5,40,6,["Vertical reach of shockwaves greatly increased."])],[])])]),skillsList=[skillsCommon,skillsFighter];function getSkillType(b){let a={};skillsList.forEach(c=>{c.name===b&&(a=c)});return a}function getSkillTier(b,a,c,g){let d={};skillsList.forEach(h=>{h.name===b&&h.categoryGroup.forEach(k=>{k.name===a&&k.skillGroup.forEach(m=>{m.name===c&&m.tierGroup.forEach(q=>{q.level===g&&(d=q)})})})});return d};const characterClassNames="Fighter Amazon Dwarf Elf Sorceress Wizard".split(" "),maxSkillPoints=155,skillRowDataId="data-row-id",skillDataCellId="data-cell-id",skillDataElementId="data-elem-id",skillIdSuffx="-name-desc",skillEffectIdSuffx="-effects",skillConditionsIdSuffx="-conditions",skillElemIdSuffixCost="-cost",skillElemIdSuffixPlayer="-player",skillElemIdSuffixCategory="-category",skillEffectsCurrentIdSuffix="-current",skillEffectsNextIdSuffix="-next",skillDataIdType="data-skill-type",skillDataIdCategory=
"data-skill-category",skillDataIdCategoryLabel="data-skill-category-label",skillDataIdSkill="data-skill-name",skillDataIdTierLevel="data-skill-tier";let playerSelectionPrevious="",currentSkillPoints=maxSkillPoints,classSkillTiers=[],commonSkillTiers=[];
function processSkillTierPropertiesForOutput(b,a,c){switch(b){case "effect":return"Next: "+a;case "cost":return 0<a?"Skill point cost: "+a+" point(s)":"Error: skill must cost at least 1 point.";case "player":return 0<a?"Player LV must be at least LV "+a+".":"";case "category":return 0<a&&c?"The "+c+" category skill must be LV "+a+".":"";default:return"Property value not matched. Check input."}}function populateSkillDescription(b,a,c,g){b.innerText=c;a.innerText=g}
function populateSkillConditions(b,a,c){let g=["cost","player","category"];for(let d=0;d<b.length;d++)b[d].innerText="category"===g[d]?processSkillTierPropertiesForOutput(g[d],a[d],c):processSkillTierPropertiesForOutput(g[d],a[d])}
function updateSkillLevel(b){var a=b.getAttribute(skillDataIdSkill),c=b.getAttribute(skillDataIdType);let g=b.getAttribute(skillDataIdCategory),d=document.getElementById(a),h={},k={},m=Number(b.value),q=m+1,t={},e={},l={},p=[,,];for(const f of d.children)f.getAttribute(skillDataCellId)===a+skillEffectIdSuffx?h=f:f.getAttribute(skillDataCellId)===a+skillConditionsIdSuffx&&(k=f);for(const f of h.children)f.getAttribute(skillDataElementId)===a+skillEffectsCurrentIdSuffix?t=f:f.getAttribute(skillDataElementId)===
a+skillEffectsNextIdSuffix&&(e=f);for(const f of k.children)f.getAttribute(skillDataElementId)===a+skillElemIdSuffixCost?p[0]=f:f.getAttribute(skillDataElementId)===a+skillElemIdSuffixPlayer?p[1]=f:f.getAttribute(skillDataElementId)===a+skillElemIdSuffixCategory&&(p[2]=f);0<m?l=getSkillTier(c,g,a,m):l.effect="";a=getSkillTier(c,g,a,q);c=[a.cost,a.minLevelPlayer,a.minLevelCategory];populateSkillDescription(t,e,l.effect,a.effect);populateSkillConditions(p,c,b.getAttribute(skillDataIdCategoryLabel))}
function populateSkillTable(b,a,c){let g=document.getElementById(a),d=document.createElement("tbody");c=document.getElementById(c);let h=document.createTextNode(b.label);c.appendChild(h);b.categoryGroup.forEach(k=>{let m=0,q=document.createElement("td"),t=document.createTextNode(k.label+" Skill");k.skillGroup.forEach(e=>{document.createTextNode(e.label.toString());document.createTextNode(e.description.toString());let l=document.createElement("tr"),p=document.createElement("td"),f=document.createElement("td"),
u=document.createElement("td"),r=document.createElement("td"),v=document.createElement("p"),w=document.createElement("p"),x=document.createElement("p"),y=document.createElement("p"),z=document.createElement("p"),A=document.createElement("p"),B=document.createElement("p"),C=document.createElement("p"),D=document.createTextNode(e.label),E=document.createTextNode(e.description),F=document.createTextNode(""),G=document.createTextNode("Next"),H=document.createTextNode(e.tierGroup[0].effect),I=document.createTextNode(processSkillTierPropertiesForOutput("cost",
e.tierGroup[0].cost)),J=document.createTextNode(processSkillTierPropertiesForOutput("player",e.tierGroup[0].minLevelPlayer)),K=document.createTextNode(processSkillTierPropertiesForOutput("category",e.tierGroup[0].minLevelCategory,k.label)),n=document.createElement("input");r.setAttribute(skillDataCellId,e.name+skillConditionsIdSuffx);y.setAttribute(skillDataElementId,e.name+skillElemIdSuffixCost);z.setAttribute(skillDataElementId,e.name+skillElemIdSuffixPlayer);A.setAttribute(skillDataElementId,e.name+
skillElemIdSuffixCategory);y.appendChild(I);z.appendChild(J);A.appendChild(K);r.appendChild(y);r.appendChild(z);r.appendChild(A);n.setAttribute("type","number");n.setAttribute("value","0");n.setAttribute("onKeyDown","return false");n.setAttribute("min","0");n.setAttribute("max",e.tierGroup.length.toString());n.setAttribute(skillDataIdType,b.name);n.setAttribute(skillDataIdCategory,k.name);n.setAttribute(skillDataIdCategoryLabel,k.label);n.setAttribute(skillDataIdSkill,e.name);u.appendChild(n);u.addEventListener("input",
function(L){updateSkillLevel(L.target)});f.setAttribute(skillDataCellId,e.name+skillEffectIdSuffx);w.setAttribute("class","skills-text-element-next-header");v.setAttribute(skillDataElementId,e.name+skillEffectsCurrentIdSuffix);x.setAttribute(skillDataElementId,e.name+skillEffectsNextIdSuffix);w.appendChild(G);x.appendChild(H);v.appendChild(F);f.appendChild(v);f.appendChild(w);f.appendChild(x);p.setAttribute(skillDataCellId,e.name+skillIdSuffx);B.appendChild(D);C.appendChild(E);p.appendChild(B);p.appendChild(C);
l.setAttribute("id",e.name);1>m&&(q.appendChild(t),l.appendChild(q));l.appendChild(p);l.appendChild(f);l.appendChild(u);l.appendChild(r);m++;d.appendChild(l)});q.setAttribute("rowspan",m)});d.setAttribute("id",a);g.parentNode.replaceChild(d,g)}function resetTableBody(b){}
function updateSkillsData(){const b=document.getElementById("tables-container");let a=document.getElementById("characters-list").value;if(a!==playerSelectionPrevious){let c=document.getElementById("common-skills-table"),g=document.getElementById("class-skills-table"),d=getSkillType(a);if(c.getAttribute("data-table-populated"))resetTableBody("common-skills-table-body");else{let h=getSkillType("common");populateSkillTable(h,"common-skills-table-body","common-skills-table-label");c.setAttribute("data-table-populated",
"");console.log(h)}playerSelectionPrevious=a;currentSkillPoints=maxSkillPoints;populateSkillTable(d,"class-skills-table-body","class-skills-table-label");g.setAttribute("data-table-populated","");"block"!==b.style.display&&(b.style.display="block");console.info(d)}}
function prepCollapse(){let b=document.getElementsByClassName("collapsible");for(let a=0;a<b.length;a++)b[a].addEventListener("click",function(){this.classList.toggle("active");var c=this.nextElementSibling;c.style.maxHeight=c.style.maxHeight?null:c.scrollHeight+"px"})}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",prepCollapse):prepCollapse();
